def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localProperties.load(new FileInputStream(localPropertiesFile))
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('keystore.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.txfbins.txfb1"
        minSdkVersion 28
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        release {
            storeFile file(System.getenv("_KEYSTORE") ?: keystoreProperties['storeFile'] ?: 'NO_FILE_FOUND')
            storePassword System.getenv("_KEYSTORE_PASSWORD") ?: keystoreProperties['storePassword']
            keyAlias System.getenv("_KEY_ALIAS") ?: keystoreProperties['keyAlias']
            keyPassword System.getenv("_KEY_PASSWORD") ?: keystoreProperties['keyPassword']
            v1SigningEnabled true
            v2SigningEnabled true
        }
    //    getByName("debug") {
    //        // Common debug keystore so all local builds can be shared between devs/QA
    //        storeFile = file("../../debug.keystore")
    //        storePassword = "android"
    //        keyAlias = "androiddebugkey"
    //        keyPassword = "android"
    //    }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    //     getByName("debug") {
    //        applicationIdSuffix ".internal.debug"
    //        versionNameSuffix "-debug"
    //        testCoverageEnabled true
    //    }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.biometric:biometric-ktx:1.2.0-alpha05'
}
